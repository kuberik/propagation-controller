---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: propagations.kuberik.io
spec:
  group: kuberik.io
  names:
    kind: Propagation
    listKind: PropagationList
    plural: propagations
    singular: propagation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Propagation is the Schema for the propagations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PropagationSpec defines the desired state of Propagation
            properties:
              backend:
                properties:
                  basePath:
                    description: 'TODO: document and add examples oci://my-registry.my-domain/kuberik/system
                      s3://my-bucket-n41nkl1n4/kuberik/system'
                    pattern: ^(oci|s3):\/\/.+$
                    type: string
                  secretRef:
                    description: The secret name containing the authentication credentials
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              deployAfter:
                properties:
                  deployments:
                    description: Propagation will proceed only after all listed deployments
                      report a healthy version for the specified amount of time.
                    items:
                      type: string
                    type: array
                  groups:
                    description: 'TODO:'
                    items:
                      type: string
                    type: array
                  interval:
                    description: Propagtion will only be performed after all the deployments
                      specified as dependencies report continous healthy states for
                      the specifed duration. In case there's multiple versions satisfying
                      the condition the newest one will be used.
                    pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                    type: string
                type: object
              deployment:
                properties:
                  group:
                    description: Propagation will not proceed if, as a result of propagation,
                      there will be more than two active versions deployed across
                      the deployments within the same deployment group. This can be
                      used if there are multiple sites which are deployed separately
                      but represent the same environment. In that case the rollout
                      of a single version can be preformed across all sites before
                      starting a rollout for a newer version.
                    type: string
                  healthHistoryDurationLimit:
                    description: Specify for how long the history of healths will
                      be kept. This needs to be at least larger than `spec.deployAfter.interval`
                      of deployments which are deployed after this one.
                    pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                    type: string
                  healthSelector:
                    description: 'TODO:'
                    properties:
                      labelSelector:
                        description: 'TODO:'
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaceSelector:
                        description: 'TODO:'
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  name:
                    description: Name of the deployment. This value can be used in
                      other Propagations to determine the order in which the deployments
                      are propagated.
                    type: string
                  version:
                    description: Reads the exact version that was deployed so that
                      accurate version can be published in the status.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: PropagationStatus defines the observed state of Propagation
            properties:
              deploymentStatusHistory:
                items:
                  properties:
                    healthy:
                      enum:
                      - Healthy
                      - Pending
                      - Degraded
                      type: string
                    start:
                      format: date-time
                      type: string
                    version:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
